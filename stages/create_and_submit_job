#!/bin/sh

user=`whoami`
lock_file='/mcs/bio/mg-rast/prod/locks/pipeline.lock'

# options
job_id=""
file=""
fastq=0
pipeline=""
options=""
rna_only=0
help=0

if [ ${user} != 'mgrastprod' ]; then echo '[error] must be user mgrastrprod'; exit 1; fi

source ~mgrastprod/.zshenv 

# Please note the following section is magic. Change at your own risk.
if ! opts=$(getopt -u -o j:f:o:p:h -l job_id:,file:,options:,pipeline:,fastq,rna_only,help -- "$@"); then exit 1; fi
set -- $opts
while [ $# -gt 0 ]
do
    case "$1" in
		-j|--job_id) job_id=$2; shift 2 ;;
		-f|--file) file=$2; shift 2 ;;
		-o|--options) options=$2; shift 2 ;;
		-p|--pipeline) pipeline=$2; shift 2 ;;
		--fastq) fastq=1; shift ;;
		--rna_only) rna_only=1; shift ;;
		-h|--help) help=1; shift ;;
		--) shift; break;;
		-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
		*) break;;
    esac
done

if [ $help -eq 1 ]; then 
	echo "Usage: "`basename $0`" -j <job_number> -f <sequence_file> [ -p <pipeline_name> -o <pipeline_options> --fastq --rna_only ]";
	exit 0;
fi

if [ -e ${lock_file} ]; then echo '[info] creating job only found pipeline lock file: '${lock_file}; fi

if [ $fastq -eq 1 ]; then
	create_job -j $job_id -u $file -f $file -p $options -q
else
	create_job -j $job_id -u $file -f $file -p $options
fi

if [ ! -e ${lock_file} ]; then 
	if [ $rna_only -eq 1 ]; then 
		submit_stages -j $job_id -o $options -p 16s
	elif [ $pipeline ]; then
		submit_stages -j $job_id -o $options -p $pipeline
	else
		submit_stages -j $job_id -o $options
	fi
fi 

exit

